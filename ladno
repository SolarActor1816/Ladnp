#Олежа, проверяй код, когда его отправляешь нам. А то такую дичь сделал почти везде.
#Я заколебался ходить по всему коду и твою дичь исправлять.

from PyQt5.QtCore import Qt                                             #Импорт библиотеки
from PyQt5.QtWidgets import (                                           #Импорт доп. библиотеки из библиоткеи
        QApplication, QWidget,                                          #Список:
        QHBoxLayout, QVBoxLayout,                                       #                           
        QGroupBox, QButtonGroup, QRadioButton,                          #  
        QPushButton, QLabel)                                            #
from random import shuffle                                              #Импорт рандомного перепешивания (для вопросов)
 
class Question():                                                       #Создание класса
    def __init__(self, question, right_answer, wrong1, wrong2, wrong3): #Создание вопроса, правильного ответа, и 3х неправильных.
        self.question = question                                        #Приравнивание вопроса к вопросу (?)
        self.right_answer = right_answer                                #Приравнивание правильного ответа к правильному (?)
        self.wrong1 = wrong1                                            #Приравнивание неправильного вопроса к неправильному (?)
        self.wrong2 = wrong2                                            #Приравнивание неправильного вопроса 2 к неправильному 2 (?)
        self.wrong3 = wrong3                                            #Приравнивание неправильного вопроса 3 к неправильному 3 (?)

                            #Этот спискок стоит соблюдать, при создании листов
 
questions_list = []                                                     #Создание самих вопросов.
questions_list.append(Question('Какая самая новая модель смартфона Samsung?', 'Galaxy S22 Ultra', 'Galaxy A53 5G', 'Galaxy Tab S8', 'Galaxy S20 FE')) #Вопрос, и его комплектуещее
questions_list.append(Question('Какой порт является рабочим в Minecraft для многих провайдеров?', '25565', '25575', '19922', '20044')) #Вопрос 2, и его комплектуещее
questions_list.append(Question('В каком месяце был основан VelRest?', 'Апрель', 'Март', 'Февраль', 'Нет правильного ответа'))
questions_list.append(Question('Какой домен у сервера VelRest?', '.ru', '.su', '.net', '.com'))
questions_list.append(Question('В каком месяце был полный выпус режима "GRIEF"?', 'Июнь', 'Май', 'Апрель', 'Июль'))
questions_list.append(Question('В каком месяце был полный выпус режима "ANARHY"?', 'Июль', 'Май', 'Апрель', 'Июнь'))
questions_list.append(Question('Какое ядро стоит на прокси VelRest?', 'BungeeCord+BotFilter', 'Velocity', 'BungeeCord', 'Velocity+BotFilter'))
questions_list.append(Question('Какой плагин был удалён на анархии VelRest по причине бага?', '3x3 pickaxe (кирка)', 'LiteBans (баны)', 'EssentialsX (команды и т.д.)', 'ServerList (лист)'))
questions_list.append(Question('Какой был рекордный онлайн на сервере VelRest?', '16', '25', '51', '40')) #Вопрос 3, и его комплектуещее

app = QApplication([])                                                  #Создание кнопок и текста вопроса.
 
btn_OK = QPushButton('| Ответить')                                      #Создание кнопки ответа
lb_Question = QLabel('Вопрос.')                                         #Текст вопроса
 
RadioGroupBox = QGroupBox("Варианты ответов")                           #Возможность переход между ответами в вопросе.
 
rbtn_1 = QRadioButton('Вариант 1')                                      #Создание кнопки первого ответа
rbtn_2 = QRadioButton('Вариант 2')                                      #Создание кнопки второго ответа
rbtn_3 = QRadioButton('Вариант 3')                                      #Создание кнопки третьего ответа
rbtn_4 = QRadioButton('Вариант 4')                                      #Создание кнопки четвёртого ответа
 
RadioGroup = QButtonGroup()                                             #Группировка переключателей, чтобы управлять ими.
RadioGroup.addButton(rbtn_1)                                            #1-ый переключатель
RadioGroup.addButton(rbtn_2)                                            #2-ой переключатель
RadioGroup.addButton(rbtn_3)                                            #3-ий переключатель
RadioGroup.addButton(rbtn_4)                                            #4-ый переключатель
 
layout_ans1 = QHBoxLayout()                                             #Горизонтальные ответы будут внутри вертикали (?)
layout_ans2 = QVBoxLayout()                                             #Вертикальные ответы будут внутри горизонтали (?)
layout_ans3 = QVBoxLayout()                                             #Вертикальные ответы будут внутри горизонтали (?)
layout_ans2.addWidget(rbtn_1)                                           #Два ответа в 1-ый столбец [1 отв.]
layout_ans2.addWidget(rbtn_2)                                           #Два ответа в 1-ый столбец [2 отв.]
layout_ans3.addWidget(rbtn_3)                                           #Два ответа в 2-ой столбец [1 отв.]
layout_ans3.addWidget(rbtn_4)                                           #Два ответа в 2-ой столбец [2 отв.]
 
layout_ans1.addLayout(layout_ans2)                                      #Размещение стобов в одной строке
layout_ans1.addLayout(layout_ans3)                                      #Размещение стобов в одной строке
 
RadioGroupBox.setLayout(layout_ans1)                                    #Меню с ответами
 
AnsGroupBox = QGroupBox("Результат теста")                              #Вывод текста после ответа
lb_Result = QLabel('прав ты или нет')                                   #Показ результата [Правильно, али - нет]
lb_Correct = QLabel('ответ будет тут!')                                 #Показ результата [Правильный ответ]
 
layout_res = QVBoxLayout()                                              #Вертикальные ответы будут внутри горизонтали (?)
layout_res.addWidget(lb_Result, alignment=(Qt.AlignLeft | Qt.AlignTop)) #Создание виджета результата (?)
layout_res.addWidget(lb_Correct, alignment=Qt.AlignHCenter, stretch=2)  #Создание виджета с правильным ответом (?)
AnsGroupBox.setLayout(layout_res)                                       #Результат (?)
 
layout_line1 = QHBoxLayout()                                            #Вопрос теста
layout_line2 = QHBoxLayout()                                            #Варианты ответа, или результат теста.
layout_line3 = QHBoxLayout()                                            #Создание кнопки: "Ответить"
 
layout_line1.addWidget(lb_Question, alignment=(Qt.AlignHCenter | Qt.AlignVCenter))
layout_line2.addWidget(RadioGroupBox)   
layout_line2.addWidget(AnsGroupBox)  
AnsGroupBox.hide()                                                      #Скрытие панели с ответом, сначала должна быть видна панель вопросов
 
layout_line3.addStretch(1)                                              #Размер
layout_line3.addWidget(btn_OK, stretch=2)                               #Увеличение размера кнопки
layout_line3.addStretch(1)                                              #Размер
 
layout_card = QVBoxLayout()
 
layout_card.addLayout(layout_line1, stretch=2)                         
layout_card.addLayout(layout_line2, stretch=8)
layout_card.addStretch(1)
layout_card.addLayout(layout_line3, stretch=1)
layout_card.addStretch(1)
layout_card.setSpacing(5)                                               #Пробел между содержимым
 
def show_result():
    RadioGroupBox.hide()                                                #Панель ответов
    AnsGroupBox.show()
    btn_OK.setText('Следующий вопрос') 
